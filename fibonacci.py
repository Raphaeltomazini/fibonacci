# -*- coding: utf-8 -*-
"""fibonacci.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1K0yzGcGoI2SMDKQaIFo7GFucICF64byQ
"""

def pertence_a_fibonacci(n):
    if n < 0:
        return False

    a, b = 0, 1

    while a <= n:
        if a == n:
            return True
        a, b = b, a + b

    return False

def main():

    try:
        numero = int(input("Informe um número para verificar se pertence à sequência de Fibonacci: "))
    except ValueError:
        print("Por favor, insira um número inteiro válido.")
        return


    if pertence_a_fibonacci(numero):
        print(f"O número {numero} pertence à sequência de Fibonacci.")
    else:
        print(f"O número {numero} NÃO pertence à sequência de Fibonacci.")

if __name__ == "__main__":
    main()

def contar_letra_a(s):

    contagem = s.lower().count('a')
    return contagem

def main():
    string = input("Digite uma string para verificar a quantidade de letras 'a' e 'A': ")

    contagem = contar_letra_a(string)

    if contagem > 0:
        print(f"A letra 'a' (maiúscula ou minúscula) ocorre {contagem} vezes na string.")
    else:
        print("A letra 'a' (maiúscula ou minúscula) não ocorre na string.")

if __name__ == "__main__":
    main()

INDICE = 12
SOMA = 0
K = 1
while K < INDICE:
    K = K + 1
    SOMA = SOMA + K
print(SOMA)

def sequencia_a():

    numeros = [1, 3, 5, 7]
    proximo_elemento = numeros[-1] + 2
    return proximo_elemento

def sequencia_b():

    numeros = [2, 4, 8, 16, 32, 64]
    proximo_elemento = numeros[-1] * 2
    return proximo_elemento

def sequencia_c():

    numeros = [0, 1, 4, 9, 16, 25, 36]
    proximo_elemento = (len(numeros)) ** 2
    return proximo_elemento

def sequencia_d():

    numeros = [4, 16, 36, 64]
    proximo_elemento = (2 * len(numeros) + 2) ** 2
    return proximo_elemento

def sequencia_e():

    fib = [1, 1, 2, 3, 5, 8]
    proximo_elemento = fib[-1] + fib[-2]
    return proximo_elemento

def sequencia_f():

    numeros = [2, 10, 12, 16, 17, 18, 19]

    if numeros[-1] % 2 == 1:
        proximo_elemento = numeros[-1] + 1
    else:
        proximo_elemento = numeros[-1] + 2
    return proximo_elemento

def main():
    print("Próximo elemento na sequência a):", sequencia_a())
    print("Próximo elemento na sequência b):", sequencia_b())
    print("Próximo elemento na sequência c):", sequencia_c())
    print("Próximo elemento na sequência d):", sequencia_d())
    print("Próximo elemento na sequência e):", sequencia_e())
    print("Próximo elemento na sequência f):", sequencia_f())

if __name__ == "__main__":
    main()